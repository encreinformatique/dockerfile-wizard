image_config: &image_config

  # make sure to set your Docker Hub username & password in CircleCI,
  # either as project-specific environment variables
  # or as resources in your organization's org-global Context

  IMAGE_NAME: docker-php

  IMAGE_TAG: 7.3

  # NOTE: if you're modifying this config.yml file manually
  # rather than using the included setup script,
  # make sure you also add the values of your IMAGE_NAME & IMAGE_TAG variables
  # to the `test_image` job (line 55)

  LINUX_VERSION: UBUNTU_TRUSTY DEBIAN_STRETCH

  # RUBY_VERSION_NUM: # pick a version from https://cache.ruby-lang.org/pub/ruby

  NODE_VERSION_NUM: latest

  # PYTHON_VERSION_NUM: # pick a version from https://python.org/ftp/python

  JAVA: false

  MYSQL_CLIENT: false

  POSTGRES_CLIENT: false

  DOCKERIZE: false

  BROWSERS: false

version: 2
jobs:
  build:
    machine: true
    environment:
      <<: *image_config

    steps:
      - checkout

      - run: bash scripts/generate.sh > Dockerfile

      - run: docker login -u $DOCKER_USERNAME -p $DOCKER_PASSWORD

      - run: docker build -t $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG .

      - run: docker push $DOCKER_USERNAME/$IMAGE_NAME:$IMAGE_TAG && sleep 10

      - store_artifacts:
          path: Dockerfile

  test_image:
    docker:
      - image: $DOCKER_USERNAME/docker-php:7.3
        environment:
          <<: *image_config

    steps:
      - checkout

      - run:
          name: start Xvfb for phantomjs test
          # command: Xvfb :99
          # background: true

      - run:
          name: bats tests
          command: |
            mkdir -p test_results/bats
            bats scripts/tests.bats | \
            perl scripts/tap-to-junit.sh > \
            test_results/bats/results.xml

      - run:
          name: Install PHP
          command: |
            sudo wget -O /etc/apt/trusted.gpg.d/php.gpg https://packages.sury.org/php/apt.gpg
            sudo sh -c 'echo "deb https://packages.sury.org/php/ $(lsb_release -sc) main" > /etc/apt/sources.list.d/php.list'
            sudo apt-get install -y

      - run:
          name: Install PHP
          command: |
            sudo apt-get install -y php7.3 php7.3-common php7.3-cli php7.3-intl
            sudo apt-get install -y libpng-dev php-gd
            sudo docker-php-ext-install gd
#            - php7.3-xdebug
#            - php7.3-soap
#            - php7.3-mysql
#            - php7.3-sqlite3
#            - php7.3-curl
#            - php7.3-tidy
#            - php7.3-readline
#            - php7.3-gd
#            - php7.3-mbstring
#            - php7.3-opcache
#            - php7.3-json
#            - php7.3-zip
#            - php7.3-xml
#            - php7.3-tidy
#            - php-apcu

      - store_test_results:
          path: test_results

      - store_artifacts:
          path: test_results

workflows:
  version: 2
  dockerfile_wizard:
    jobs:
      - build:
          context: org-global

      - test_image:
          context: org-global
          requires:
            - build
